<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Bash on Panda的随笔</title>
    <link>https://chenxiaopang.github.io/categories/bash/</link>
    <description>Recent content in Bash on Panda的随笔</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Sun, 21 Jun 2015 16:18:26 +0800</lastBuildDate><atom:link href="https://chenxiaopang.github.io/categories/bash/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Bash变量扩展修改符</title>
      <link>https://chenxiaopang.github.io/2015/06/21/bash%E5%8F%98%E9%87%8F%E6%89%A9%E5%B1%95%E4%BF%AE%E6%94%B9%E7%AC%A6/</link>
      <pubDate>Sun, 21 Jun 2015 16:18:26 +0800</pubDate>
      
      <guid>https://chenxiaopang.github.io/2015/06/21/bash%E5%8F%98%E9%87%8F%E6%89%A9%E5%B1%95%E4%BF%AE%E6%94%B9%E7%AC%A6/</guid>
      <description>一、未设置就临时替换（:-） 冒号：用来检验变量是否设置过，如果没有冒号，则认为设置过，不替换 1 2 3 4 5 6 7 8 9 10 $ fruit=peach $ echo ${fruit:-plum} peach $ fruit= $ echo ${fruit:-plum} plum $ echo</description>
    </item>
    
    <item>
      <title>Here文档</title>
      <link>https://chenxiaopang.github.io/2015/06/10/here%E6%96%87%E6%A1%A3/</link>
      <pubDate>Wed, 10 Jun 2015 23:20:26 +0800</pubDate>
      
      <guid>https://chenxiaopang.github.io/2015/06/10/here%E6%96%87%E6%A1%A3/</guid>
      <description>Here文档为需要输入的程序，例如，mail、sort和cat等接收在线文本，直到遇到用户定义的结束符号为止。 最常用的用途是在Shell脚本</description>
    </item>
    
    <item>
      <title>grep的基本用法</title>
      <link>https://chenxiaopang.github.io/2015/06/09/grep%E7%9A%84%E5%9F%BA%E6%9C%AC%E7%94%A8%E6%B3%95/</link>
      <pubDate>Tue, 09 Jun 2015 23:18:26 +0800</pubDate>
      
      <guid>https://chenxiaopang.github.io/2015/06/09/grep%E7%9A%84%E5%9F%BA%E6%9C%AC%E7%94%A8%E6%B3%95/</guid>
      <description>一、grep家族 grep: Global search Regular Expression(RE) and Print out the line grep家族包括grep、egrep和fgrep egrep和fgrep和grep只有很小的不同 egrep</description>
    </item>
    
    <item>
      <title>正则表达式</title>
      <link>https://chenxiaopang.github.io/2015/06/09/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/</link>
      <pubDate>Tue, 09 Jun 2015 23:18:26 +0800</pubDate>
      
      <guid>https://chenxiaopang.github.io/2015/06/09/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/</guid>
      <description>一、基本元字符集 元字符 作用 示例 示例意义 ^ 锚定行的开始 /^love/ 匹配所有以love开头的行 $ 锚定行的结束 /love$/ 匹配所有以love结束的行 . 匹配一个字符 /l..e/ 匹</description>
    </item>
    
    <item>
      <title>Bash内置命令exec和重定向</title>
      <link>https://chenxiaopang.github.io/2015/06/06/bash%E5%86%85%E7%BD%AE%E5%91%BD%E4%BB%A4exec%E5%92%8C%E9%87%8D%E5%AE%9A%E5%90%91/</link>
      <pubDate>Sat, 06 Jun 2015 23:18:26 +0800</pubDate>
      
      <guid>https://chenxiaopang.github.io/2015/06/06/bash%E5%86%85%E7%BD%AE%E5%91%BD%E4%BB%A4exec%E5%92%8C%E9%87%8D%E5%AE%9A%E5%90%91/</guid>
      <description>Bash内置命令exec可以替换当前程序而不需要启动一个新的进程，可以改变标准输入和输出而不需要启动一个新的子进程。 如果文件用exec打开，</description>
    </item>
    
    <item>
      <title>Bash提示符</title>
      <link>https://chenxiaopang.github.io/2015/06/05/bash%E6%8F%90%E7%A4%BA%E7%AC%A6/</link>
      <pubDate>Fri, 05 Jun 2015 23:18:26 +0800</pubDate>
      
      <guid>https://chenxiaopang.github.io/2015/06/05/bash%E6%8F%90%E7%A4%BA%E7%AC%A6/</guid>
      <description>Bash有四种提示符 一、基本提示符PS1 即$符号，是默认的基本提示符，当Shell运行在交互模式下时，该提示符会出现在屏幕上，可以设置为其它</description>
    </item>
    
    <item>
      <title>Bash启动选项</title>
      <link>https://chenxiaopang.github.io/2015/06/05/bash%E5%90%AF%E5%8A%A8%E9%80%89%E9%A1%B9/</link>
      <pubDate>Fri, 05 Jun 2015 19:18:26 +0800</pubDate>
      
      <guid>https://chenxiaopang.github.io/2015/06/05/bash%E5%90%AF%E5%8A%A8%E9%80%89%E9%A1%B9/</guid>
      <description>Bash选项可以用来控制它的行为 一、选项类型 有两种选项：单字符选项和多字符选项，多字符选项必须出现在单字符选项以前 单字符选项：由一个减号和一</description>
    </item>
    
    <item>
      <title>Bash内置命令</title>
      <link>https://chenxiaopang.github.io/2015/06/05/bash%E5%86%85%E7%BD%AE%E5%91%BD%E4%BB%A4/</link>
      <pubDate>Fri, 05 Jun 2015 16:18:26 +0800</pubDate>
      
      <guid>https://chenxiaopang.github.io/2015/06/05/bash%E5%86%85%E7%BD%AE%E5%91%BD%E4%BB%A4/</guid>
      <description>Bash有很多内置命令，因为这些命令是内置的，因此bash不需要在磁盘上为它们定位，执行速度更快。 1、列出所有内置命令列表 $ enable 2、关闭内置命</description>
    </item>
    
    <item>
      <title>Bash函数</title>
      <link>https://chenxiaopang.github.io/2015/02/21/bash%E5%87%BD%E6%95%B0/</link>
      <pubDate>Sat, 21 Feb 2015 16:18:26 +0800</pubDate>
      
      <guid>https://chenxiaopang.github.io/2015/02/21/bash%E5%87%BD%E6%95%B0/</guid>
      <description>一、什么是Bash函数 Bash不支持goto语句，可以用function实现程序流程跳转。 当前shell中一组组织在一起并被命名的命令。 比脚</description>
    </item>
    
    <item>
      <title>Bash变量</title>
      <link>https://chenxiaopang.github.io/2015/01/31/bash%E5%8F%98%E9%87%8F/</link>
      <pubDate>Sat, 31 Jan 2015 16:18:26 +0800</pubDate>
      
      <guid>https://chenxiaopang.github.io/2015/01/31/bash%E5%8F%98%E9%87%8F/</guid>
      <description>一、变量类型 Bash变量有两种：局部变量和环境变量。 1、局部变量 局部变量的范围仅在创建它的Shell中有效。 2、环境变量 能为创建它的Shel</description>
    </item>
    
    <item>
      <title>find的基本用法</title>
      <link>https://chenxiaopang.github.io/2014/11/29/find%E7%9A%84%E7%94%A8%E6%B3%95/</link>
      <pubDate>Sat, 29 Nov 2014 16:18:26 +0800</pubDate>
      
      <guid>https://chenxiaopang.github.io/2014/11/29/find%E7%9A%84%E7%94%A8%E6%B3%95/</guid>
      <description>find在Linux系统中和其它工具，如sed、awk、grep等结合起来用，非常有用。 一、列出系统中所有属于root用户的“set uid”</description>
    </item>
    
    <item>
      <title>gawk的基本用法</title>
      <link>https://chenxiaopang.github.io/2014/11/29/gawk%E7%9A%84%E7%94%A8%E6%B3%95/</link>
      <pubDate>Sat, 29 Nov 2014 16:18:26 +0800</pubDate>
      
      <guid>https://chenxiaopang.github.io/2014/11/29/gawk%E7%9A%84%E7%94%A8%E6%B3%95/</guid>
      <description>GNU gawk工具的功能是将指定文件或标准输入中符合指定模式（pattern）的行按指定的动作（action）进行格式化处理。 一、语法 1 2 3 gawk [options]</description>
    </item>
    
    <item>
      <title>sed的基本用法</title>
      <link>https://chenxiaopang.github.io/2014/11/29/sed%E7%9A%84%E7%94%A8%E6%B3%95/</link>
      <pubDate>Sat, 29 Nov 2014 16:18:26 +0800</pubDate>
      
      <guid>https://chenxiaopang.github.io/2014/11/29/sed%E7%9A%84%E7%94%A8%E6%B3%95/</guid>
      <description>一、什么是sed sed命令是一个流线式、非交互式编辑器，可以实现在vi等编辑器中一样的编辑效果。 二、sed的工作原理 1. 模式空间（patter</description>
    </item>
    
    <item>
      <title>Bash Shell执行命令的优先级</title>
      <link>https://chenxiaopang.github.io/2014/11/06/bash-shell%E6%89%A7%E8%A1%8C%E5%91%BD%E4%BB%A4%E7%9A%84%E4%BC%98%E5%85%88%E7%BA%A7/</link>
      <pubDate>Thu, 06 Nov 2014 16:18:26 +0800</pubDate>
      
      <guid>https://chenxiaopang.github.io/2014/11/06/bash-shell%E6%89%A7%E8%A1%8C%E5%91%BD%E4%BB%A4%E7%9A%84%E4%BC%98%E5%85%88%E7%BA%A7/</guid>
      <description>1、别名 2、关键字 if、function、while 、until等 3、函数 4、内置命令 5、可执行程序或脚本</description>
    </item>
    
  </channel>
</rss>
